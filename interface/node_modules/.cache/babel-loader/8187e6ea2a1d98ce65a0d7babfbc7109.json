{"ast":null,"code":"import _slicedToArray from \"/Users/carsonbrown/Documents/Programming/Pin/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/carsonbrown/Documents/Programming/Pin/interface/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport GetLocation from './components/getLocation';\nimport MapGL, { Popup } from 'react-map-gl';\nimport { Marker } from 'react-map-gl';\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\nconst SIZE = 20;\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiZG1hcnpob3RiYXJ6IiwiYSI6ImNrMGdzNW44NjBheWgzY3FhamRjbnY4MG0ifQ.SMSy8AjPTqu51lddBozXqA'; //main map application\n\nfunction App() {\n  //state declarations:\n  //states to manage initial map coordinates\n  const _useState = useState(38),\n        _useState2 = _slicedToArray(_useState, 2),\n        longitude = _useState2[0],\n        setLongitude = _useState2[1];\n\n  const _useState3 = useState(-78),\n        _useState4 = _slicedToArray(_useState3, 2),\n        latitude = _useState4[0],\n        setLatitude = _useState4[1];\n\n  const _useState5 = useState({\n    latitude: longitude,\n    longitude: latitude,\n    zoom: 3,\n    bearing: 0,\n    pitch: 0\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        viewport = _useState6[0],\n        setViewport = _useState6[1]; //state to manage popUp \n\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        popUpLongitude = _useState8[0],\n        setPopUpLongitude = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        popUpLatitude = _useState10[0],\n        setPopUpLatitude = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        popupInfo = _useState12[0],\n        setPopupInfo = _useState12[1];\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        popUpURL = _useState14[0],\n        setPopUpURL = _useState14[1]; //pulls long and lat from browser\n\n\n  useEffect(() => {\n    GetLocation().then(location => {\n      setLongitude(location.lat);\n      setLatitude(location.lng);\n    });\n  }); //dont really need these but figure we'll move all setPopUpXYZ's into here at some point\n\n  const openPopUp = () => {\n    setPopupInfo(true);\n  };\n\n  const closePopUp = () => {\n    setPopupInfo(false);\n  }; //using 'react-map-gl' Popup component but I think we need something better \n\n\n  function renderPopup() {\n    return popupInfo && React.createElement(Popup, {\n      tipSize: 5,\n      anchor: \"top\",\n      longitude: popUpLongitude,\n      latitude: popUpLatitude,\n      closeOnClick: false,\n      onClose: () => {\n        closePopUp();\n        setPopUpURL(null);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      width: 480,\n      src: popUpURL,\n      alt: \"thing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  } //places all pins on map\n\n\n  function Pins() {\n    var data = [{\n      \"city\": \"New York\",\n      \"image\": \"http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Above_Gotham.jpg/240px-Above_Gotham.jpg\",\n      \"state\": \"New York\",\n      \"latitude\": 40.6643,\n      \"longitude\": -73.9385\n    }, {\n      \"city\": \"Los Angeles\",\n      \"image\": \"http://upload.wikimedia.org/wikipedia/commons/thumb/5/57/LA_Skyline_Mountains2.jpg/240px-LA_Skyline_Mountains2.jpg\",\n      \"state\": \"California\",\n      \"latitude\": 34.0194,\n      \"longitude\": -118.4108\n    }, {\n      \"city\": \"Philadelphia\",\n      \"image\": \"http://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Philly_skyline.jpg/240px-Philly_skyline.jpg\",\n      \"state\": \"Pennsylvania\",\n      \"latitude\": 40.0094,\n      \"longitude\": -75.1333\n    }, {\n      \"city\": \"San Francisco\",\n      \"image\": \"http://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/San_Francisco_skyline_from_Coit_Tower.jpg/240px-San_Francisco_skyline_from_Coit_Tower.jpg\",\n      \"state\": \"California\",\n      \"latitude\": 37.7751,\n      \"longitude\": -122.4193\n    }, {\n      \"city\": \"Seattle\",\n      \"image\": \"http://upload.wikimedia.org/wikipedia/commons/thumb/3/36/SeattleI5Skyline.jpg/240px-SeattleI5Skyline.jpg\",\n      \"state\": \"Washington\",\n      \"latitude\": 47.6205,\n      \"longitude\": -122.3509\n    }];\n    return data.map(datum => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      key: `marker-${datum.city}`,\n      longitude: datum.longitude,\n      latitude: datum.latitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      height: SIZE,\n      viewBox: \"0 0 24 24\",\n      style: {\n        cursor: 'pointer',\n        fill: '#d00',\n        stroke: 'none',\n        transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\n      },\n      onClick: () => {\n        setPopUpLongitude(datum.longitude);\n        setPopUpLatitude(datum.latitude);\n        setPopUpURL(datum.image);\n        openPopUp();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: ICON,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })))));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"map-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(MapGL, Object.assign({}, viewport, {\n    width: \"100vw\",\n    height: \"100vh\",\n    mapStyle: \"mapbox://styles/dmarzhotbarz/ck5u4qywr3lr31iq0rg9smoiz\",\n    onViewportChange: setViewport,\n    mapboxApiAccessToken: MAPBOX_TOKEN,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(Pins, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), renderPopup())));\n}\n\nexport default App;\n/*\n      <Switch>\n        <Route path='/login' render = {() => <LoginFunc/> }/>\n      </Switch>\n*/","map":{"version":3,"sources":["/Users/carsonbrown/Documents/Programming/Pin/interface/src/App.js"],"names":["React","useState","useEffect","GetLocation","MapGL","Popup","Marker","ICON","SIZE","MAPBOX_TOKEN","App","longitude","setLongitude","latitude","setLatitude","zoom","bearing","pitch","viewport","setViewport","popUpLongitude","setPopUpLongitude","popUpLatitude","setPopUpLatitude","popupInfo","setPopupInfo","popUpURL","setPopUpURL","then","location","lat","lng","openPopUp","closePopUp","renderPopup","Pins","data","map","datum","city","cursor","fill","stroke","transform","image"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GetLocation from './components/getLocation';\nimport MapGL, { Popup } from 'react-map-gl';\nimport { Marker } from 'react-map-gl';\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\nconst SIZE = 20;\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiZG1hcnpob3RiYXJ6IiwiYSI6ImNrMGdzNW44NjBheWgzY3FhamRjbnY4MG0ifQ.SMSy8AjPTqu51lddBozXqA';\n\n//main map application\nfunction App() {\n  //state declarations:\n  //states to manage initial map coordinates\n  const [longitude, setLongitude] = useState(38);\n  const [latitude, setLatitude] = useState(-78);\n  const [viewport, setViewport] = useState({\n    latitude: longitude,\n    longitude: latitude,\n    zoom: 3,\n    bearing: 0,\n    pitch: 0\n  });\n  //state to manage popUp \n  const [popUpLongitude, setPopUpLongitude] = useState(0);\n  const [popUpLatitude, setPopUpLatitude] = useState(0);\n  const [popupInfo, setPopupInfo] = useState(false);\n  const [popUpURL, setPopUpURL] = useState(null);\n\n  //pulls long and lat from browser\n  useEffect(() => {\n    GetLocation().then(location => {\n      setLongitude(location.lat);\n      setLatitude(location.lng);\n    });\n  });\n\n  //dont really need these but figure we'll move all setPopUpXYZ's into here at some point\n  const openPopUp = () => {\n    setPopupInfo(true);\n  }\n  const closePopUp = () => {\n    setPopupInfo(false);\n  }\n\n  //using 'react-map-gl' Popup component but I think we need something better \n  function renderPopup() {\n    return (popupInfo &&\n      <Popup\n        tipSize={5}\n        anchor=\"top\"\n        longitude={popUpLongitude}\n        latitude={popUpLatitude}\n        closeOnClick={false}\n        onClose={() => {closePopUp(); setPopUpURL(null);} }\n      >\n        <div>\n        <img width={480} src={popUpURL} alt=\"thing\" />\n      </div>\n      </Popup>\n    );\n  }\n\n  //places all pins on map\n  function Pins() {\n    var data = [\n      { \"city\": \"New York\", \"image\": \"http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Above_Gotham.jpg/240px-Above_Gotham.jpg\", \"state\": \"New York\", \"latitude\": 40.6643, \"longitude\": -73.9385 },\n      { \"city\": \"Los Angeles\", \"image\": \"http://upload.wikimedia.org/wikipedia/commons/thumb/5/57/LA_Skyline_Mountains2.jpg/240px-LA_Skyline_Mountains2.jpg\", \"state\": \"California\", \"latitude\": 34.0194, \"longitude\": -118.4108 },\n      { \"city\": \"Philadelphia\", \"image\": \"http://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Philly_skyline.jpg/240px-Philly_skyline.jpg\", \"state\": \"Pennsylvania\", \"latitude\": 40.0094, \"longitude\": -75.1333 },\n      { \"city\": \"San Francisco\", \"image\": \"http://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/San_Francisco_skyline_from_Coit_Tower.jpg/240px-San_Francisco_skyline_from_Coit_Tower.jpg\", \"state\": \"California\", \"latitude\": 37.7751, \"longitude\": -122.4193 },\n      { \"city\": \"Seattle\", \"image\": \"http://upload.wikimedia.org/wikipedia/commons/thumb/3/36/SeattleI5Skyline.jpg/240px-SeattleI5Skyline.jpg\", \"state\": \"Washington\", \"latitude\": 47.6205, \"longitude\": -122.3509 },\n    ]\n    return (\n      data.map(datum => (\n        <div>\n          <Marker key={`marker-${datum.city}`} longitude={datum.longitude} latitude={datum.latitude}>\n            <svg\n              height={SIZE}\n              viewBox=\"0 0 24 24\"\n              style={{\n                cursor: 'pointer',\n                fill: '#d00',\n                stroke: 'none',\n                transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\n              }}\n              onClick={() => { setPopUpLongitude(datum.longitude); setPopUpLatitude(datum.latitude); setPopUpURL(datum.image); openPopUp(); }}\n            >\n              <path d={ICON} />\n            </svg>\n          </Marker>\n        </div>\n      )\n      ))\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className='map-container'>\n        <MapGL\n          {...viewport}\n          width=\"100vw\"\n          height=\"100vh\"\n          mapStyle=\"mapbox://styles/dmarzhotbarz/ck5u4qywr3lr31iq0rg9smoiz\"\n          onViewportChange={setViewport}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n        >\n          <Pins />\n          {renderPopup()}\n        </MapGL>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n/*\n      <Switch>\n        <Route path='/login' render = {() => <LoginFunc/> }/>\n      </Switch>\n*/\n"]},"metadata":{},"sourceType":"module"}